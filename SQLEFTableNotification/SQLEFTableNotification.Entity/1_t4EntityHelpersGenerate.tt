<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="Microsoft.VisualStudio.OLE.Interop" #>
<#@ assembly name="Microsoft.VisualStudio.Shell" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop.8.0" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection"#>

<#

	//For full version with complete T4 features go to http://www.anasoft.net/apincore 
        //demo video https://youtu.be/ySV9vm0D9as

	//var tc = new TemplateCommon();

	//get list of entity classes
	//List<EnvDTE.CodeClass> entityClassesNotExistsinDomain = tc.GetClassesToCreate(false,"SQLEFTableNotification.Entity", "BaseEntity","SQLEFTableNotification.Domain", "BaseDomain","ViewModel");
        List<string> entityClassesNotExistsinDomain = new List<string>{"Entity1","Entity2"};
        List<string> props = new List<string>{"prop1","prop2"};

#>
// —————————————— 
// <auto-generated> 
//	This code was auto-generated <#= DateTime.Now #>
//     	T4 template produces notes for manual updates 
//	NOTE:T4 generated code may need additional updates/addjustments by developer in order to compile a solution.
// <auto-generated> 
// —————————————–

using System;
using System.Threading.Tasks;
using System.Linq;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
namespace SQLEFTableNotification.Entity.Context
{
    public partial class SQLEFTableNotificationContext : DbContext
    {
<#
	foreach(string cl in entityClassesNotExistsinDomain)
	{
	var entityName = cl;
#>	
		//generate code for <#= entityName #>
<#
   }
#>

	}
}

